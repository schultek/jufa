name: jufa
description: Jugend-Freizeit App

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.5

environment:
  sdk: '>=2.13.0-0 <3.0.0'

dependencies:
  _discoveryapis_commons: ^1.0.2
  auto_size_text: ^3.0.0
  cached_network_image: ^3.1.0
  camera: ^0.9.4
  cloud_firestore: ^3.1.0
  cloud_functions: ^3.1.0
  cropperx: ^0.0.4
  cupertino_rounded_corners: ^2.0.0
  dart_mappable: ^0.8.6
  discoveryapis_generator: ^1.0.0
  dotted_border: ^2.0.0+2
  file_picker: ^4.2.1
  firebase_auth: ^3.2.0
  firebase_core: ^1.10.0
  firebase_dynamic_links: ^3.0.1
  firebase_messaging: ^11.1.0
  firebase_storage: ^10.1.0
  flare_flutter: ^3.0.2
  flex_color_scheme: ^4.1.1
  flutter:
    sdk: flutter
  flutter_chat_ui: ^1.5.1
  flutter_native_splash: ^1.3.1
  flutter_quill: ^2.0.20
  flutter_riverpod: ^1.0.0
  flutter_typeahead: ^3.2.1
  flutter_udid: ^2.0.0
  google_sign_in: ^5.2.1
  hive: ^2.0.4
  hive_flutter: ^1.1.0
  http: ^0.13.4
  image: ^3.0.8
  image_picker: ^0.8.4+4
  o_color_picker: ^1.0.2
  palette_generator: ^0.3.2
  path_provider: ^2.0.7
  rive: ^0.7.33
  riverpod_context: ^0.1.1
  share_plus: ^3.0.4
  shared_preferences: ^2.0.9
  shimmer: ^2.0.0
  spotify:
    git:
      url: https://github.com/schultek/spotify-dart
      ref: player
  tuple: ^2.0.0
  url_launcher: ^6.0.12
  webview_flutter: ^2.3.0

dev_dependencies:
  build_runner: ^2.1.4
  dependency_validator: ^3.1.0
  flutter_lints: ^1.0.4
  flutter_test:
    sdk: flutter

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/animations/the_button.riv
    - assets/animations/cookingpot.riv
    - assets/animations/reorder_icon.flr
    - assets/animations/reorder_icon_2.flr

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Cousine
      fonts:
        - asset: assets/fonts/Cousine-Regular.ttf
        - asset: assets/fonts/Cousine-Italic.ttf
          style: italic
        - asset: assets/fonts/Cousine-Bold.ttf
          weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

flutter_native_splash:
  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  #color: "#56b95f"
  background_image: "assets/background.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  #image: assets/splash.png

  # The color_dark, background_image_dark, and image_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  #color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png

  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  #android: false
  #ios: false
  #web: false

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  #fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'

  # To enable support for Android 12, set the following parameter to true.  Defaults to false.
  #android12: true